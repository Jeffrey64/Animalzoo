#BlueJ class context
comment0.target=Animal
comment0.text=\r\n\ Abstract\ class\ Animal\r\n\ \r\n\ @author\ Mr.\ Jaffe\r\n\ @version\ 1.0\ 2017-07-13\r\n
comment1.params=
comment1.target=Animal()
comment1.text=\r\n\ Constructor\r\n
comment10.params=
comment10.target=java.lang.String\ getType()
comment10.text=\r\n\ This\ will\ return\ the\ type\ of\ animal\ (i.e.\ "Dog",\ "Cat",\ etc)\r\n\ \r\n\ @return\ The\ type\ of\ the\ animal\r\n
comment11.params=
comment11.target=java.lang.String\ getName()
comment11.text=\r\n\ This\ will\ return\ the\ animal's\ name.\ What's\ the\ default\ name?\r\n\ \r\n\ @return\ The\ name\ of\ the\ animal\ (i.e.\ "Fido",\ "Rover")\r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ toString()\ is\ a\ method\ that\ all\ Java\ classes\ implement.\ \ It's\ where\ you\ can\ \r\n\ generate\ a\ string\ that\ describes\ the\ object.\ \ You\ should\ not\ override\ this\r\n\ method\ unless\ you\ know\ what\ you're\ doing\r\n
comment2.params=studentName\ color\ legs
comment2.target=Animal(java.lang.String,\ java.lang.String,\ int)
comment2.text=\r\n\ Overloaded\ constructor\ that\ sets\ color\ and\ \#\ of\ legs\r\n\ \r\n\ @param\ color\ Initial\ color\r\n\ @param\ legs\ Initial\ \#\ of\ legs\r\n
comment3.params=
comment3.target=java.lang.String\ getColor()
comment3.text=\r\n\ Getter\ for\ color\r\n
comment4.params=color
comment4.target=void\ setColor(java.lang.String)
comment4.text=\ \r\n\ Setter\ for\ color\r\n\ \r\n\ @param\ color\ New\ color\r\n
comment5.params=
comment5.target=int\ getLegs()
comment5.text=\r\n\ Getter\ for\ legs\r\n
comment6.params=legs
comment6.target=void\ setLegs(int)
comment6.text=\ \r\n\ Setter\ for\ legs\r\n\ \r\n\ @param\ legs\ New\ number\ of\ legs\r\n
comment7.params=
comment7.target=java.lang.String\ getStudentName()
comment7.text=\ \r\n\ Getter\ for\ studentName\r\n\ \r\n\ @return\ The\ student\ name\r\n
comment8.params=
comment8.target=java.lang.String\ speak()
comment8.text=\r\n\ What\ does\ the\ animal\ say?\ \ Descendant\ classes\ should\ override\ this\r\n\ method\ or\ default\ speak\ will\ generate\ "Yaba-daba-doo"\r\n
comment9.params=
comment9.target=java.lang.String\ getDisposition()
comment9.text=\r\n\ This\ will\ return\ a\ String\ that\ describes\ the\ animal's\ general\ disposition.\r\n\ Sample\ dispositions\ could\ be\ "mean"\ or\ "friendly".\ \ Use\ different\ adjectives\r\n\ in\ your\ method.\ The\ default\ disposition\ is\ "meh"\r\n\ \r\n\ @return\ Disposition\r\n
numComments=13
